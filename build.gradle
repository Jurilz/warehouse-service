buildscript {
    repositories {
        jcenter()
        mavenLocal()
    }
    
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

buildscript {
    repositories {
        maven {
            url = uri("https://plugins.gradle.org/m2/")
        }
    }
    dependencies {
        classpath("com.github.jengelman.gradle.plugins:shadow:6.0.0")
    }
}

apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'

group 'com.warehouseservice'
version '0.0.1'

application {
    mainClassName = "io.ktor.server.netty.EngineMain"
}

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src']
    test.kotlin.srcDirs = test.java.srcDirs = ['test']
    main.resources.srcDirs = ['resources']
    test.resources.srcDirs = ['testresources']
}

repositories {
    mavenLocal()
    jcenter()
    maven { url 'https://kotlin.bintray.com/ktor' }
}

dependencies {
    // Exposed
    implementation "org.jetbrains.exposed:exposed-core:$exposed_version"
    implementation "org.jetbrains.exposed:exposed-dao:$exposed_version"
    implementation "org.jetbrains.exposed:exposed-jdbc:$exposed_version"
    //Postgresql
    implementation "org.postgresql:postgresql:42.2.2"
    // Koin for Kotlin
    implementation "org.koin:koin-core:$koin_version"
    implementation "org.koin:koin-ktor:$koin_version"
    // RabbitMQ
    implementation 'com.rabbitmq:amqp-client:5.8.0'
    //KMongo
    implementation 'org.litote.kmongo:kmongo:4.0.2'
    // async driver for reactive streams style
    implementation 'org.litote.kmongo:kmongo-async:4.0.2'
    // KMongo with kotlin coroutines
    implementation 'org.litote.kmongo:kmongo-coroutine:4.0.2'
    // KMongo RxJava2
    implementation 'org.litote.kmongo:kmongo-rxjava2:4.0.2'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "ch.qos.logback:logback-classic:$logback_version"
    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation "io.ktor:ktor-jackson:$ktor_version"
    implementation "io.ktor:ktor-client-core:$ktor_version"
    implementation "io.ktor:ktor-client-core-jvm:$ktor_version"
    implementation "io.ktor:ktor-client-apache:$ktor_version"
    testImplementation "io.ktor:ktor-server-tests:$ktor_version"
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
        jvmTarget = '1.8'
        apiVersion = '1.3'
        languageVersion = '1.3'
    }
}

tasks {
    shadowJar {
        archiveFileName.set("warehouse-service.jar")
    }
}
