version: '3.2'

services:

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.8-management
    command: rabbitmq-server
    restart: unless-stopped
    ports:
    - "5672:5672"
    - "15672:15672"
    networks:
      - project-network

  mongo:
    container_name: mongo-project
    image: mongo:4
    restart: unless-stopped
    ports:
      - "27017:27017"
    networks:
      - project-network
    depends_on:
      - postgres

  postgres:
    container_name: postgres-project
    image: postgres:13-alpine
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - /var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      PGDATA: /var/lib/postgresql/data
      POSTGRES_PASSWORD: postgres
    networks:
      - project-network
    depends_on:
      - rabbitmq

  nginx:
    container_name: nginx-project
    image: nginx:1.19
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./subrequest.js:/etc/nginx/subrequest.js
    networks:
      - project-network
    depends_on:
      - warehouse-service
      - order-service

  warehouse-service:
    container_name: warehouse-service
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - ./environments/warehouse-service.env
    networks:
      - project-network
    ports:
      - "8080:8080"
    depends_on:
      - rabbitmq
      - mongo
      - postgres
      - order-service
    secrets:
      - warehouse_secret

  order-service:
    container_name: order-service
    restart: unless-stopped
    build:
      context: ../projectOrderService
      dockerfile: ./Dockerfile
#    image: order-service
    env_file:
      - ../projectOrderService/environments/order-service.env
    networks:
      - project-network
    ports:
      - "8100:8100"
    depends_on:
      - rabbitmq
      - mongo
      - postgres
    secrets:
      - order_secret

  warehouse-frontend:
    container_name:  warehouse-frontend
    restart: unless-stopped
    build:
      context: ../thewarehouse-Jurilz/warehouse/warehouseFrontend
      dockerfile: ./Dockerfile
#    image: warehouse-frontend
    networks:
      - project-network
    ports:
      - "4200:8200"
    depends_on:
      - warehouse-service
      - order-service
      - nginx

  shop-frontend:
    container_name:  shop-frontend
    restart: unless-stopped
    build:
      context: ../thewarehouse-Jurilz/shop/shopFrontend
      dockerfile: ./Dockerfile
#    image: shop-frontend
    networks:
      - project-network
    ports:
      - "4300:8300"
    depends_on:
      - warehouse-service
      - order-service
      - nginx

networks:
  project-network:

secrets:
  warehouse_secret:
    file: ./secrets/warehouse.secret
  order_secret:
    file: ../projectOrderService/secrets/order.secret
